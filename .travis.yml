language: android
# Turning off caching to avoid caching Issues
# cache: false
# Using the new Container-Based Infrastructure
sudo: false

env:
  global:
    # Initiating clean Gradle output
    - TERM=dumb
    # Amount of memory granted to Gradle JVM
    - GRADLE_OPTS="-Xmx512m -XX:MaxPermSize=512m"
    # General Android settings used in builds
    - ANDROID_TARGET=android-23
    - ANDROID_API_LEVEL=23
    - EMULATOR_API_LEVEL=21
    - ANDROID_BUILD_TOOLS_VERSION=23.0.0
    - ANDROID_ABI=google_apis/armeabi-v7a
    - ADB_INSTALL_TIMEOUT=20 

before_install:
    # Making sure gradlew has executable permissions
    - cd android-SDK-HB
    - chmod a+x gradlew

android:
  components:
    - platform-tools
    - tools
    - build-tools-$ANDROID_BUILD_TOOLS_VERSION
    - android-$ANDROID_API_LEVEL
    
    
    # Support library
    - extra-android-support
    
    # For Google APIs
    - addon-google_apis-google-$ANDROID_API_LEVEL
    - addon-google_apis-google-$EMULATOR_API_LEVEL
    
    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository
    # - addon-google_apis-google-19
    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
    - sys-img-armeabi-v7a-android-19
    - sys-img-x86-android-17
    # Specify at least one system image
    - sys-img-armeabi-v7a-addon-google_apis-google-$ANDROID_API_LEVEL
    - sys-img-armeabi-v7a-addon-google_apis-google-$EMULATOR_API_LEVEL
    
  licenses:
    - 'android-sdk-license-.+'
    
before_script:
  # Create and start emulator
  - echo no | android create avd --force -n test -t "Google Inc.:Google APIs:"$EMULATOR_API_LEVEL --abi $ANDROID_ABI
  - emulator -avd test -no-skin -no-audio -no-window &
  - android-wait-for-emulator
  
script: ./gradlew assembleDebug
